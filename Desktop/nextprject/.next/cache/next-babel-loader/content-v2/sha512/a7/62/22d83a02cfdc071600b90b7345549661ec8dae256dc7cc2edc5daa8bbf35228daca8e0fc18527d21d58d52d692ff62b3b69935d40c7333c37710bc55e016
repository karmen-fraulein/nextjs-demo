{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbook/Desktop/nextprject/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://karmen:amorame987@cluster0.gebck.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollaction = db.collection('meetups');\n  const meetups = await meetupsCollaction.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetups => ({\n      params: {\n        meetupId: meetups._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://karmen:amorame987@cluster0.gebck.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollaction = db.collection('meetups');\n  const selectedMeetup = await meetupsCollaction.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        image: selectedMeetup.image\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/macbook/Desktop/nextprject/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Head","Fragment","MeetupDetail","MeetupDetails","props","getStaticPaths","client","connect","db","meetupsCollaction","collection","meetups","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData","id","title","address","description","image"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEU;AAAM,QAAA,IAAI,EAAG,aAAb;AAA2B,QAAA,OAAO,EAAG;AAArC;AAAA;AAAA;AAAA;AAAA,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAGD,OAAO,eAAeC,cAAf,GAA+B;AAEpC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAM;AACJC,IAAAA,QAAQ,EAAE,KADN;AAEJC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaP,OAAD,KAAc;AAAEQ,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAET,OAAO,CAACE,GAAR,CAAYQ,QAAZ;AAAZ;AAAV,KAAd,CAAZ;AAFH,GAAN;AAKD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAC3C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAAEZ,IAAAA,GAAG,EAAEd,QAAQ,CAACqB,QAAD;AAAf,GAA1B,CAA7B;AAEAd,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAM;AAEJX,IAAAA,KAAK,EAAC;AACJsB,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEH,cAAc,CAACX,GAAf,CAAmBQ,QAAnB,EADM;AAEVO,QAAAA,KAAK,EAAEJ,cAAc,CAACI,KAFZ;AAGVC,QAAAA,OAAO,EAAEL,cAAc,CAACK,OAHd;AAIVC,QAAAA,WAAW,EAAEN,cAAc,CAACM,WAJlB;AAKVC,QAAAA,KAAK,EAAEP,cAAc,CAACO;AALZ;AADR;AAFF,GAAN;AAaD;AAED,eAAe5B,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>React Meetup</title>\n                <meta name = 'description' content = 'Browse a huge list of highly active React meetups! ' />\n      </Head>\n      \n    </Fragment>\n    \n  );\n}\n\n\nexport async function getStaticPaths(){\n\n  const client = await MongoClient.connect('mongodb+srv://karmen:amorame987@cluster0.gebck.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db()\n\n  const meetupsCollaction = db.collection('meetups');\n  const meetups = await meetupsCollaction.find({}, {_id: 1}).toArray();\n\n  client.close()\n\n  return{\n    fallback: false,\n    paths: meetups.map((meetups) => ({ params: { meetupId: meetups._id.toString() },}),)\n    \n  }\n}\n\nexport async function getStaticProps(context){\n  //fetch data for single meetup\n\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect('mongodb+srv://karmen:amorame987@cluster0.gebck.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db()\n\n  const meetupsCollaction = db.collection('meetups');\n  const selectedMeetup = await meetupsCollaction.findOne({ _id: ObjectId(meetupId)})\n\n  client.close()\n\n  return{\n\n    props:{\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        image: selectedMeetup.image,\n      },\n\n    }\n  }\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}